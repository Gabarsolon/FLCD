Alphabet:
a. Upper and lower case letters of the English alphabet (A-Z and a-z);
b. Underline character '_';
c. Decimal digits (0-9);
d. Special characters !@$%&

Lexic:
a.Special symbols, representing:
- operators 
     + - * / = != < <== ==> > === += -=
separators: () [] {} ; , space 
-reserved words
    int alpha arrr fibre make if fi of prgr read show define
    now persistent for while and or not starts from transforms stops at
    stdin stdout

b.identifiers
-a sequence of letters and digits, such that the first character is a letter or underline; the rule is:
<identifier> ::= <letter>|_|<letter><digit><identifier>|_<digit><identifier>|
                 <letter><identifier>|_<identifier>|<identifier><digit>
<digit> ::= 0|1|...|9
<letter> ::= A|B|...|Z|a|b|...|z

c.constants
1.integer - rule:
    <nonzerodigit> ::= 1|2|...|9
    <naturalnumber> := <nonzerodigit>|<nonzerodigit><digit_sequence>
    <digit_sequence>::=<digit>|<digit><digit_sequence>
    <integer> ::= <naturalnumber>|+<naturalnumber>|-<naturalnumber>|0
2.character
    <character> ::= '<letter>'|'<digit>'|'_'|' '|'!'|'@'|'$'|'%'|'&'
3.string
    <string> ::= "<character_aux>"|"<character_aux><character_seq>"
    <character_seq> ::= <character_aux>|<character_aux><character_seq>
    <character_aux>::=<letter>|<digit>|_| |!|@|$|%|&